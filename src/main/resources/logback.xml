<?xml version="1.0" encoding="UTF-8" ?>
<!--    级别从高到低 OFF 、 FATAL 、 ERROR 、 WARN 、 INFO 、 DEBUG 、 TRACE 、 ALL -->
<!--    日志输出规则 根据当前ROOT 级别，日志输出时，级别高于root默认的级别时 会输出 -->
<!--    以下 每个配置的 filter 是过滤掉输出文件里面，会出现高级别文件，依然出现低级别的日志信息，
        通过filter 过滤只记录本级别的日志 -->
<!--    scan 当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。 -->
<!--    scanPeriod 设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。
        当scan为true时，此属性生效。默认的时间间隔为1分钟。 -->
<!--    debug 当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 -->

<configuration scan="true" scanPeriod="60 seconds" debug="false">
    <!-- 用来设置上下文名称，每个logger都关联到logger上下文，默认上下文名称为default。
    但可以使用<contextName>设置成其他名字，用于区分不同应用程序的记录。一旦设置，不能修改。-->
    <contextName>mybatisTest</contextName>
    <!-- 动态日志级别 -->
    <jmxConfigurator/>
    <!-- 定义日志文件 输出位置 -->
    <!-- <property name="log_dir" value="C:/test" />-->
    <property name="log_dir" value="./src/main/resources/logback" />
    <!-- 日志最大的历史 30天 -->
    <property name="maxHistory" value="30" />

    <!-- ConsoleAppender 控制台输出日志 -->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!-- 设置日志输出格式 -->
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%yellow(%d{yyyy-MM-dd HH:mm:ss.SSS}) %red([%thread]) %highlight(%-5level) %cyan([%logger{15}:%line]) - %magenta(%msg) %n</pattern>
            <!--            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger - %msg%n</pattern>-->
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!--"com.dl.test"包下的类的日志 -->
    <logger name="cn.hnie.dao" level="all"  additivity="false">
        <!--日志输出级别-->
        <!--        <level value="debug"/>-->
        <appender-ref ref="console"/>
    </logger>
    <!--root级别 DEBUG -->
    <root>
        <!-- 打印debug级别日志及以上级别日志 -->
        <level value="error" />
        <!-- 控制台输出 -->
        <appender-ref ref="console" />
        <!-- 文件输出 -->
        <!--        <appender-ref ref="ERROR" />-->
        <!--        <appender-ref ref="INFO" />-->
        <!--        <appender-ref ref="WARN" />-->
        <!--        <appender-ref ref="DEBUG" />-->
        <!--        <appender-ref ref="TRACE" />-->
    </root>
</configuration>
